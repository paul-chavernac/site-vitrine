#security:
#    # https://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
#    providers:
#        in_memory: { memory: ~ }
#    firewalls:
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#        main:
#            anonymous: ~
#
#            # activate different ways to authenticate
#
#            # http_basic: ~
#            # https://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate
#
#            # form_login: ~
#            # https://symfony.com/doc/current/cookbook/security/form_login_setup.html

security:
    providers:
        mysql:
            entity:
                class: App\Entity\User
                property: userName
                
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            encode_as_base64: false
            iterations: 13
            
    firewalls:
        
        main:
            anonymous: true
            pattern: ^/
            form_login:
                login_path: login #route vers login
                
                check_path: login #route qui va verifier que le login est ok ou non
                default_target_path: home
                
            provider: mysql #les donnees proviennent de mysql
            logout:
                path: /logout  #route de deconnexion
                target: / #la deconnexion redige vers
                
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER #deux roles pris en comptes , admin>user
        
    access_control: #controle d'acces
    - { path: ^/perso, roles: ROLE_ADMIN}
    - { path: ^/visiteur, roles: ROLE_USER}

    #~{path: ^/, roles: ROLE_ADMIN}